@using StudentManagement.ViewModels
@model PaginatedList<StudentViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index">
    <div class="d-flex">
        <input class="form-control" placeholder="Search..." value="@ViewData["CurrentFilter"]" type="text"
            autocomplete="off" name="SearchString" />
        <select name="courseId" class="form-select" asp-items="ViewBag.CourseId">
            <option value="">-- Select Course --</option>
        </select>
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Image)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(model => model[0].StudentId)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateCreatedSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(model => model[0].StudentName)
                </a>
            </th>
            <th>
            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameCreatedSortParm"]"
                asp-route-currentFilter="@ViewData["CurrentFilter"]">
                @Html.DisplayNameFor(model => model[0].DateOfBirth)
            </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Gender)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (!string.IsNullOrEmpty(item.ImagePath))
                    {
                        <img width="50" height="50" style="object-fit: cover;" src="@item.ImagePath"
                            alt="Image for @item.StudentId">
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StudentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfBirth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">
    Next
</a>