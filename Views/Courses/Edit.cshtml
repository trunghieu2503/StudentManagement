@using StudentManagement
@model StudentManagement.ViewModels.CourseViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1 class="text-center my-4">Sửa lớp học</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <h4>Thông tin lớp học</h4>
        <hr />
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group mb-3">
                <label asp-for="CourseID" class="control-label"></label>
                <input asp-for="CourseID" class="form-control" />
                <span asp-validation-for="CourseID" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="CourseName" class="control-label"></label>
                <input asp-for="CourseName" class="form-control" />
                <span asp-validation-for="CourseName" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Teacher" class="control-label"></label>
                <input asp-for="Teacher" class="form-control" />
                <span asp-validation-for="Teacher" class="text-danger"></span>
            </div>

            <div class="form-group d-flex justify-content-between">
                <input type="submit" value="Lưu" class="btn btn-success btn-lg" />
                <a asp-action="Index" class="btn btn-secondary btn-lg">Trở lại</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
